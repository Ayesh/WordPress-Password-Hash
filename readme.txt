=== PHP Native password hash ===
Contributors: ayeshrajans
Tags: password, password hashing, password_hash, bcrypt, password security, security
Requires at least: 3.7
Tested up to: 4.7
Stable tag: 1.0
License: GPLv2 or later
License URI: https://www.gnu.org/licenses/gpl-2.0.html

Makes Wordpress use PHP native password_hash() functions for portable, stronger & time-attack safe Bcrypt hashes that are portable easily.

== Description ==

*Required PHP 5.5 or later*

This plugin swaps out Wordpress core's password hashing mechanism with PHP 5.5's `password_hash()`` and its accompnaying functions. By default, PHP uses BCrypt to hash the passwords.

*  A password salt will be generated using a Cryptographically Secure Pseudo-Random Number Generator (`CSPRNG`)
*  Password hashes are safe from dictionary attacks, because a secure salt is generated for each password.
*  The password is hashing is iterated multiple times to provide a good resistivity for brute-force attacks.
*  Password checks are made in a way that mitigates time-attacks.
*  You do not have to reset passwords of all users. Passwords already hashed in the database will be rehashed automatically and transparently the next time the user logs in.
*  PHP might come up with newer password hashing algorithms, and they will be automatically supported without having to reset all the passwords.

This plugin was made initially because one of our applications used Wordpress for authentication, but we needed to use an external system
to verify the passwords directly from the database too. Since Wordpress has its own password hashing algorithm, we decided to make this plugin to address that problem.
With this plugin, passwords generated by both Wordpress and outcustom applications now use the PHP's default `password_hash()` functions.

Other than portability, this plugin makes it possible for your Wordpress site to take advantage of the latest features if they are available on your ssytem.

== Installation ==

1. Upload the plugin files to the `/wp-content/plugins/password-hash` directory, or install the plugin through the WordPress plugins screen directly.
1. Activate the plugin through the 'Plugins' screen in WordPress
1. You are all set! There is nothing to configure. All existing users passwords will be rehashed on their next successful login.


== Frequently Asked Questions ==

= Why does this plugin require PHP 5.5?  =

Because the underline functionality is only availble only since PHP 5.5. There are other open source workarounds, but we found the effort it not worth it. The oldest PHP version offocially supported is PHP 5.6 as of now.

= Do I have to reset all existing passwords?  =

Nope! This plugin is smart to identify an old password hash, and it can seemlessly validate it using the old algorith, and update the hash with the new version automatically. Your users wouldn't notice a thing.

= What happens if I uninstall this plugin? =

Technically, password hashing is a one-way operation. This means we cannot undo the effect of this plugin. Your existing users will need to reset their passwords. However, your password hashes will remain safe.

= How did pirates collaborate before computers? =

Pier to pier networking.

== Screenshots ==

== Changelog ==

= 1.0 =
* Initial release.

